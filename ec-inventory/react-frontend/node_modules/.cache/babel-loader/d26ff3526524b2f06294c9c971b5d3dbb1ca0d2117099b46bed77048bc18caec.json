{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\folio\\\\ec-inventory\\\\react-frontend\\\\src\\\\components\\\\ProductList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n// React-Bootstrapの読み込み\nimport { Card, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductList() {\n  _s();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8080/api/products').then(res => {\n      if (!res.ok) {\n        throw new Error('データ取得失敗');\n      }\n      return res.json();\n    }).then(data => {\n      setProducts(data);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n  const addToCart = productId => {\n    const currentCart = localStorage.getItem('cart');\n    const cartData = currentCart ? JSON.parse(currentCart) : [];\n    const existingIndex = cartData.findIndex(item => item.productId === productId);\n    if (existingIndex >= 0) {\n      cartData[existingIndex].quantity += 1;\n    } else {\n      cartData.push({\n        productId,\n        quantity: 1\n      });\n    }\n    localStorage.setItem('cart', JSON.stringify(cartData));\n    alert('カートに追加: ' + productId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: products.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-6 col-md-4 col-lg-3 mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: p.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"\\u5728\\u5EAB: \", p.stock]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => addToCart(p.id),\n            children: \"\\u30AB\\u30FC\\u30C8\\u306B\\u5165\\u308C\\u308B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, p.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductList, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useEffect","useState","Card","Button","jsxDEV","_jsxDEV","ProductList","_s","products","setProducts","fetch","then","res","ok","Error","json","data","catch","err","console","error","addToCart","productId","currentCart","localStorage","getItem","cartData","JSON","parse","existingIndex","findIndex","item","quantity","push","setItem","stringify","alert","className","children","map","p","Body","Title","name","fileName","_jsxFileName","lineNumber","columnNumber","Text","stock","variant","onClick","id","_c","$RefreshReg$"],"sources":["C:/project/folio/ec-inventory/react-frontend/src/components/ProductList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Product } from '../types/types';\r\n\r\n// React-Bootstrapの読み込み\r\nimport { Card, Button } from 'react-bootstrap';\r\n\r\nfunction ProductList() {\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8080/api/products')\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error('データ取得失敗');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data: Product[]) => {\r\n        setProducts(data);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }, []);\r\n\r\n  const addToCart = (productId: number) => {\r\n    const currentCart = localStorage.getItem('cart');\r\n    const cartData: { productId: number; quantity: number }[] =\r\n      currentCart ? JSON.parse(currentCart) : [];\r\n\r\n    const existingIndex = cartData.findIndex(\r\n      (item) => item.productId === productId\r\n    );\r\n\r\n    if (existingIndex >= 0) {\r\n      cartData[existingIndex].quantity += 1;\r\n    } else {\r\n      cartData.push({ productId, quantity: 1 });\r\n    }\r\n\r\n    localStorage.setItem('cart', JSON.stringify(cartData));\r\n    alert('カートに追加: ' + productId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {products.map((p) => (\r\n        <div key={p.id} className=\"col-sm-6 col-md-4 col-lg-3 mb-3\">\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>{p.name}</Card.Title>\r\n              <Card.Text>在庫: {p.stock}</Card.Text>\r\n              <Button\r\n                variant=\"primary\"\r\n                onClick={() => addToCart(p.id)}\r\n              >\r\n                カートに入れる\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}